# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: geth-adam-ingress
#   namespace: default
#   annotations:
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
#     nginx.ingress.kubernetes.io/proxy-send-timeout: "600"

# spec:
#   ingressClassName: nginx
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: geth-adam
#                 port:
#                   number: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: geth-adam
# spec:
#   type: LoadBalancer
#   ports:
#     - port: 8546
#       targetPort: 8546
#   selector:
#     app: geth-adam
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: geth-adam
#   labels:
#     app: geth-adam
# spec:
#   ports:
#     - port: 8546
#       name: ws
#     - port: 30303
#       name: gethdiscovery
#   selector:
#     app: geth-adam
# ---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
spec:
  serviceName: geth
  replicas: 1
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
    spec:
      containers:
        - name: geth
          image: ethereum/client-go:v1.10.18
          args:
            [
              "-http",
              "--http.addr=0.0.0.0",
              "--ws",
              "--ws.addr=0.0.0.0",
              "--datadir=/geth-data",
            ]
          env:
          ports:
            - containerPort: 8545
              name: http
            - containerPort: 8546
              name: ws
            - containerPort: 30303
              name: gethdiscovery
          volumeMounts:
            - name: geth-data
              mountPath: "/geth-data"
          resources:
            requests:
              memory: 12Gi
              cpu: 4000m
  volumeClaimTemplates:
    - metadata:
        name: geth-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Ti
